import{i as b,S as x,a as w}from"./assets/vendor-b52d9f5e.js";(function(){const r=document.createElement("link").relList;if(r&&r.supports&&r.supports("modulepreload"))return;for(const t of document.querySelectorAll('link[rel="modulepreload"]'))a(t);new MutationObserver(t=>{for(const i of t)if(i.type==="childList")for(const o of i.addedNodes)o.tagName==="LINK"&&o.rel==="modulepreload"&&a(o)}).observe(document,{childList:!0,subtree:!0});function n(t){const i={};return t.integrity&&(i.integrity=t.integrity),t.referrerpolicy&&(i.referrerPolicy=t.referrerpolicy),t.crossorigin==="use-credentials"?i.credentials="include":t.crossorigin==="anonymous"?i.credentials="omit":i.credentials="same-origin",i}function a(t){if(t.ep)return;t.ep=!0;const i=n(t);fetch(t.href,i)}})();function c(e=""){const r=e||"Sorry, there was an error fetching images.";b.show({theme:"dark",message:r,messageSize:"16px",messageColor:"white",backgroundColor:"#EF4040",position:"topRight",timeout:5e3})}function u(e){return e.map(({comments:r,downloads:n,largeImageURL:a,likes:t,webformatURL:i,tags:o,views:L})=>`<li class="gallery-item">
        <a class="gallery-link" href="${a}">
            <img class="gallery-image" src="${i}" alt="${o}">
            <ul class="gallery-description">
              <li class="gallery-description-item">Likes: <span class="discrp-item">${t}</span> </li>
              <li class="gallery-description-item">Views: <span class="discrp-item">${L}</span></li>
              <li class="gallery-description-item">Downloads: <span class="discrp-item">${n}</span></li>
              <li class="gallery-description-item">Comments: <span class="discrp-item">${r}</span></li>
            </ul>
        </a>
    </li>`).join("")}const s={searchForm:document.querySelector(".search-form"),imageList:document.querySelector(".gallery"),nextBtn:document.querySelector(".next-btn"),loader:document.querySelector(".loader")};function f(e){console.error(e),refs.imageList.innerHTML="",showMessage(e.stack),refs.nextBtn.removeEventListener("click",nextPage),refs.nextBtn.classList.add("is-hidden")}let l=0,d="";const h=new x(".gallery a",{captionsData:"alt",captionDelay:250});s.searchForm.addEventListener("submit",v);s.nextBtn.addEventListener("click",B);async function v(e){if(e.preventDefault(),d=e.currentTarget.elements.query.value.trim(),l=1,s.nextBtn.classList.add("is-hidden"),s.imageList.innerHTML="",p(),!d){c("Please, fill in the search field");return}try{const r=await g(d,l);if(r.hits.length===0){c("Sorry, there are no images matching your search query. Please try again!"),s.searchForm.reset();return}s.imageList.insertAdjacentHTML("beforeend",u(r.hits)),h.refresh(),r.hits.length>=40?s.nextBtn.classList.remove("is-hidden"):c("We're sorry, but you've reached the end of search results."),s.searchForm.reset()}catch(r){f(r)}finally{y(),s.loader.classList.add("hidden")}}async function g(e,r){const n="https://pixabay.com/api/",a="41927866-cfb01af7ede59fae11104cea9";return(await w.get(n,{params:{key:a,q:e,image_type:"photo",orientation:"horizontal",safesearch:!0,per_page:40,page:r}})).data}async function B(){s.loader.classList.remove("hidden"),s.nextBtn.classList.add("is-hidden"),l+=1,p();try{const e=await g(d,l);if(l*40>=e.totalHits){if(c("We're sorry, but you've reached the end of search results."),e.hits.length>0){s.imageList.insertAdjacentHTML("beforeend",u(e.hits)),h.refresh(),s.nextBtn.classList.add("is-hidden"),m();return}}else s.imageList.insertAdjacentHTML("beforeend",u(e.hits)),h.refresh(),s.nextBtn.classList.remove("is-hidden"),m()}catch(e){f(e)}finally{y(),s.loader.classList.add("hidden")}}function y(){setTimeout(()=>{s.loader.style.display="none"},500)}function p(){s.loader.style.display="block"}function m(){window.scrollBy({top:.7*document.querySelector(".gallery-item").getBoundingClientRect().height,behavior:"smooth"})}
//# sourceMappingURL=commonHelpers.js.map
